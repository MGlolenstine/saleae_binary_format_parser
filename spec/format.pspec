import_ffi utf8 as type;

type SaleaePacket = container {
    id: u8[8],
    version: i32le,
    type_id: i32le,
    body: ItemBody(type_id),
};

type TypeId = enum i32le {
	Digital = 0,
	Analog,
};

type ItemBody(type_id: i32le) = container +tagged_enum {
	Analog: AnalogBody { type_id == TypeId::Analog },
	Digital: DigitalBody { type_id == TypeId::Digital },
};

type DigitalBody = container {
    initial_state: u32le,
    begin_time: f64le,
    end_time: f64le,
    num_transitions: u64le,
    transitions: f64le [num_transitions],
};

type AnalogBody = container {
    begin_time: f64le,
    sample_rate: u64le,
    downsample: u64le,
    num_samples: u64le,
    samples: f32le [num_samples],
};